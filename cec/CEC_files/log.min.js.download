/*
 Debug Console Logging with Query String Support v1.0.1 */
"undefined"===typeof cdc&&(cdc={});"undefined"===typeof cdc.dmr&&(cdc.dmr={});"undefined"===typeof cdc.dmr.utils&&(cdc.dmr.utils={});
cdc.dmr.utils.dmLog=function(d,e){var b=this;this.qstr=d;this.debug=!1;this.error=function(a){try{b.debug&&console.error(a)}catch(c){}};this.warn=function(a){try{b.debug&&console.warn(a)}catch(c){}};this.info=function(a){try{b.debug&&console.info(a)}catch(c){}};this.log=function(a){try{b.debug&&console.log(a)}catch(c){}};this.table=function(a){try{b.debug&&console.table(a)}catch(c){}};this.assert=function(a,c){try{b.debug&&console.assert(a,c)}catch(f){}};this.trace=function(a,c){try{b.debug&&console.trace(a,
c)}catch(f){}};this.group=function(a){try{b.debug&&console.group(a)}catch(c){}};this.groupCollapsed=function(a){try{b.debug&&console.groupCollapsed(a)}catch(c){}};this.groupEnd=function(){try{b.debug&&console.groupEnd()}catch(a){}};this.count=function(a){try{b.debug&&console.count(a)}catch(c){}};this.time=function(a){try{b.debug&&console.time(a)}catch(c){}};this.timeEnd=function(a){try{b.debug&&console.timeEnd(a)}catch(c){}};this.dirxml=function(a){try{b.debug&&console.dirxml(a)}catch(c){}};if("undefined"!==
typeof e&&e)this.debug=e;else if(d=cdc.dmr.utils.getParameterByName("debug"))d=d.split(","),-1<d.indexOf(this.qstr)&&(this.debug=!0);return{error:this.error,warn:this.warn,log:this.log,info:this.info,group:this.group,groupCollapsed:this.groupCollapsed,groupEnd:this.groupEnd,table:this.table,assert:this.assert,trace:this.trace,count:this.count,time:this.time,timeEnd:this.timeEnd,dirxml:this.dirxml,testAll:this.testAll}};