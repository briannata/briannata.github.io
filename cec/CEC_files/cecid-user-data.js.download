if (typeof storeHistory !== 'function') {
	function storeHistory(key, value) {
		if (window.localStorage) {
			window.localStorage.setItem(key, value);
		} else {
			var days = 1;
			var expires = new Date();
			expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
			document.cookie = key + '=' + value + ';expires=' + expires.toUTCString();
		}
	}
}

if (typeof getHistory !== 'function') {
	function getHistory(key) {
		var keyValue = null;
		var tmpkey = null;

		if (window.localStorage && window.localStorage.getItem(key)) {
			keyValue = window.localStorage.getItem(key);
		} else {
			tmpkey = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');
			if (tmpkey) {
				keyValue = tmpkey[2];
			}
		}

		return keyValue;
	}
}
if (typeof getFrameworkInfo !== 'function') {
	function getFrameworkInfo(options) {
		var defaults = {
			interval: 200,
			retries: 10
		}
		var opts = Object.assign({}, defaults, options);
		var retriesLeft = opts.retries;

		function getInfo() {
			if (window.cec && window.cec.userInfo && window.cec.userInfo.info) {
				return window.cec.userInfo.info;
			}
			let z = JSON.parse(getHistory('userInfoDispatcher'));
			if (z && z.profile && z.profile.contactInfo) {
				z.profile['phl'] = z.profile.contactInfo;
				z.profile.phl['givenName'] = z.profile.phl['givenname'];
				z.profile.phl['uid'] = String(z.profile.phl['mail']).split('@')[0];
			}
			if (z && z.profile && z.profile.phl) {
				return z.profile.phl;
			}
			return null;
		}

		return new Promise(function (resolve) {
			checkUidInterval();

			function checkUidInterval() {
				var info = getInfo();
				if (info) {
					resolve(info);
				} else if (retriesLeft > 0) {
					retriesLeft--;
					setTimeout(checkUidInterval, opts.interval);
				} else {
					resolve();
				}
			}
		});
	}
}

if (typeof getFrameworkUserFirstName !== 'function') {
	function getFrameworkUserFirstName(options) {
		var defaults = {
			interval: 50,
			retries: 5
		}
		var opts = Object.assign({}, defaults, options);
		var retriesLeft = opts.retries;
		
		function getUserFirstName() {
			if (window.cec && window.cec.userInfo && window.cec.userInfo.info && window.cec.userInfo.info.givenName && (window.cec.userInfo.info.givenName !== '')) {
					return window.cec.userInfo.info.givenName;
			}
			let z = JSON.parse(getHistory('userInfoDispatcher'));
			if (z && z.profile && z.profile.contactInfo) {
				z.profile['phl'] = z.profile.contactInfo;
				z.profile.phl['givenName'] = z.profile.phl['givenname'];
				z.profile.phl['uid'] = String(z.profile.phl['uid']).split('@')[0];
			}
			if (z && z.profile && z.profile.phl && z.profile.phl.givenName && (z.profile.phl.givenName !== '')) {
				return z.profile.phl.givenName;
			}
			return null;
		}
	
		return new Promise(function (resolve) {
			checkFirstNameInterval();	
			function checkFirstNameInterval() {
				var firstName = getUserFirstName();
				if (firstName) {
					resolve(firstName);
				} else if (retriesLeft > 0) {
					retriesLeft--;
					setTimeout(checkFirstNameInterval, opts.interval);
				} else {
					resolve();
				}
			}
		});
	}
}

if (typeof checkFrameworkImage !== 'function') {
	function checkFrameworkImage(link, callback) {
		var img = new Image();
		img.onload = function() { callback(true);};
		img.onerror = function() { callback(false);};
		img.src = link;
	}
}

window.addEventListener('load', (event) => {
	let imgsrc = '/c/dam/cec/cec/ecdigitalops/rc-personalized/images/nophoto.jpg';

	getFrameworkInfo().then(function(info){
		if (info && info.uid && (info.uid !== '')) {
			checkFrameworkImage('//wwwin.cisco.com/dir/photo/zoom/'+ info.uid + '.jpg', function(result) {
				if (result){
					imgsrc = '//wwwin.cisco.com/dir/photo/zoom/'+ info.uid + '.jpg';
					storeHistory('cec-personalized-cecid', info.uid);
					storeHistory('cec-personalized-username', info.givenName);
					storeHistory('cec-personalized-imgsrc', imgsrc);
				}
			});
		}
	});	
});